[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\saura\AppData\Local\Temp\idea11.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\saura\AppData\Local\Temp\idea11.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.6 (Eclipse Adoptium Java 11.0.20.1)
[debug]       Load.loadUnit: plugins took 121.2857ms
[debug]       Load.loadUnit: defsScala took 0.601ms
[debug] [Loading] Scanning directory C:\Users\saura\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\saura\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 24.3114 ms
[debug]           Load.resolveProject(global-plugins) took 53.5997ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\saura\.sbt\1.0\plugins, plugins: List(<none>))) took 105.174ms
[debug] [Loading] Done in C:\Users\saura\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 135.3887ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.5081ms
[debug]     Load.loadUnit(file:/C:/Users/saura/.sbt/1.0/plugins/, ...) took 270.5712ms
[debug]   Load.apply: load took 521.2649ms
[debug]   Load.apply: resolveProjects took 6.2437ms
[debug]   Load.apply: finalTransforms took 84.3675ms
[debug]   Load.apply: config.delegates took 23.8467ms
[debug]   Load.apply: Def.make(settings)... took 594.0666ms
[debug]   Load.apply: structureIndex took 136.6657ms
[debug]   Load.apply: mkStreams took 4.6104ms
[info] loading global plugins from C:\Users\saura\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3668.5935ms
[debug]           Load.loadUnit: plugins took 25.692ms
[debug]           Load.loadUnit: defsScala took 0.0031ms
[debug] [Loading] Scanning directory C:\Users\saura\IdeaProjects\shoppingbasket\project
[debug]             Load.loadUnit: mkEval took 8.5854ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\saura\IdeaProjects\shoppingbasket\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.1287 ms
[info] loading settings for project shoppingbasket-build from idea11.sbt ...
[debug]               Load.resolveProject(shoppingbasket-build) took 4.0217ms
[debug]             Load.loadTransitive: finalizeProject(Project(id shoppingbasket-build, base: C:\Users\saura\IdeaProjects\shoppingbasket\project, plugins: List(<none>))) took 6.9073ms
[debug] [Loading] Done in C:\Users\saura\IdeaProjects\shoppingbasket\project, returning: (shoppingbasket-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 181.9436ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.8132ms
[debug]         Load.loadUnit(file:/C:/Users/saura/IdeaProjects/shoppingbasket/project/, ...) took 214.3709ms
[debug]       Load.apply: load took 216.0496ms
[debug]       Load.apply: resolveProjects took 0.1217ms
[debug]       Load.apply: finalTransforms took 10.0813ms
[debug]       Load.apply: config.delegates took 0.5773ms
[debug]       Load.apply: Def.make(settings)... took 80.7209ms
[debug]       Load.apply: structureIndex took 37.5904ms
[debug]       Load.apply: mkStreams took 0.0025ms
[info] loading project definition from C:\Users\saura\IdeaProjects\shoppingbasket\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 794.9ms
[debug]     Load.loadUnit: defsScala took 0.0037ms
[debug] [Loading] Scanning directory C:\Users\saura\IdeaProjects\shoppingbasket
[debug]       Load.loadUnit: mkEval took 0.4282ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.3329 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 41.0779ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\saura\IdeaProjects\shoppingbasket, plugins: List(<none>))) took 45.2571ms
[debug] [Loading] Done in C:\Users\saura\IdeaProjects\shoppingbasket, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 133.0025ms
[debug]     Load.loadUnit: cleanEvalClasses took 7.2549ms
[debug]   Load.loadUnit(file:/C:/Users/saura/IdeaProjects/shoppingbasket/, ...) took 935.8678ms
[debug] Load.apply: load took 937.9277ms
[debug] Load.apply: resolveProjects took 0.178ms
[debug] Load.apply: finalTransforms took 25.7599ms
[debug] Load.apply: config.delegates took 0.4778ms
[debug] Load.apply: Def.make(settings)... took 78.6013ms
[debug] Load.apply: structureIndex took 22.444ms
[debug] Load.apply: mkStreams took 0.0031ms
[info] set current project to shoppingbasket (in build file:/C:/Users/saura/IdeaProjects/shoppingbasket/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 51080 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 51080, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to shoppingbasket (in build file:/C:/Users/saura/IdeaProjects/shoppingbasket/)
[debug] > Exec(idea-shell, None, None)
